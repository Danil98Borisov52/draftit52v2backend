server:
  port: 8085

eureka:
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 10
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/

minio:
  url: http://minio:9000
  access-key: minio
  secret-key: minio123
  bucket: user-avatars

keycloak:
  auth-server-url: http://keycloak:8080
  realm: it52
  client-id: it52-client
  client-secret: vHgP94O0lsGldQHfcHreP02y4X0PsRKQ

spring:
  application:
    name: user-service
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: jdbc:postgresql://localhost:5432/it52_mbase501
    username: dborisov
    password: dborisov
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: it52-client
            client-secret: vHgP94O0lsGldQHfcHreP02y4X0PsRKQ
            scope: openid, profile, email
            provider: keycloak
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
        provider:
          keycloak:
            authorization-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/auth
            issuer-uri: http://keycloak:8080/realms/it52
            token-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/token
            user-info-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/userinfo
            jwk-set-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/certs
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/it52
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.security.oauth2.client: TRACE
