server:
  port: 8086

eureka:
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
spring:
  application:
    name: event-registration-service
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: jdbc:postgresql://localhost:5432/it52_mbase501
    username: dborisov
    password: dborisov
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/it52
      client:
        registration:
          event-service:
            client-id: it52-client
            client-secret: vHgP94O0lsGldQHfcHreP02y4X0PsRKQ
            scope: openid, profile, email
            provider: keycloak
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
          user-service:
            client-id: it52-client
            client-secret: vHgP94O0lsGldQHfcHreP02y4X0PsRKQ
            scope: openid, profile, email
            provider: keycloak
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
          keycloak:
            client-id: it52-client
            client-secret: vHgP94O0lsGldQHfcHreP02y4X0PsRKQ
            scope: openid, profile, email
            provider: keycloak
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
        provider:
          keycloak:
            authorization-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/auth
            issuer-uri: http://keycloak:8080/realms/it52
            token-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/token
            user-info-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/userinfo
            jwk-set-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/certs
            user-name-attribute: preferred_username

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.security.oauth2.client: TRACE
    reactor.netty.http.client: DEBUG
    org.springframework.web.reactive.function.client.ExchangeFunctions: TRACE
    org.springframework.web.reactive.function.client.ExchangeFilterFunction: TRACE
    org.springframework.web.reactive.function.client.WebClient: DEBUG
    com.example.client: DEBUG
user:
  service:
    url: http://user-service:8085

event:
  service:
    url: http://event-service:8086