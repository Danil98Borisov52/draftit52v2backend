eureka:
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/

spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - TokenRelay=
      routes:
        - id: keycloak
          uri: http://keycloak:8080
          predicates:
            - Path=/realms/**
          filters:
            - TokenRelay=
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - TokenRelay=
        - id: event-service
          uri: lb://event-service
          predicates:
            - Path=/api/events/**
          filters:
            - TokenRelay=
        - id: resource-service
          uri: lb://resource-service
          predicates:
            - Path=/api/resources/**
          filters:
            - TokenRelay=
        - id: event-registration-service
          uri: lb://event-registration-service
          predicates:
            - Path=/api/participations/**
          filters:
            - TokenRelay=
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: it52-client
            client-secret: vHgP94O0lsGldQHfcHreP02y4X0PsRKQ
            scope: openid
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/it52
            authorization-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/auth
            token-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/token
            user-info-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/userinfo
            jwk-set-uri: http://keycloak:8080/realms/it52/protocol/openid-connect/certs
            user-name-attribute: preferred_username
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.security.oauth2.client: TRACE
    org.springframework.web: DEBUG

server:
  port: 8081