version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    command: start-dev --hostname=keycloak --hostname-strict=false
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user
    ports:
      - "5432:5432"
    networks:
      - app-network

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8071:8071"
    volumes:
      - ./src/main/resources:/app/resources
    environment:
      - SPRING_PROFILES_ACTIVE=native
    # Чтобы spring-cloud-config-server видел ресурсы по пути /app/resources
    command: >
      java -jar /app/app.jar
      --spring.cloud.config.server.native.search-locations=file:/app/resources
      --server.port=8071
      --spring.profiles.active=native
    networks:
      - app-network

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8071
    networks:
      - app-network

  gateway-server:
    container_name: gateway-server
    build:
      context: ./gateway-server
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
      - config-server
      - keycloak
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8071
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8070/eureka
    networks:
      - app-network

  resource-server:
    container_name: resource-server
    build:
      context: ./resource-server
      dockerfile: Dockerfile
    ports:
      - "8090:8090"  # порт 0 означает случайный, лучше укажи конкретный, например 8090:8090
    depends_on:
      - eureka-server
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8071
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8070/eureka
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8085:8085"
    depends_on:
      - postgres
      - keycloak
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: user
    networks:
      - app-network

networks:
  app-network:
    driver: bridge